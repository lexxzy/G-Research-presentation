# Deployment for Spring Boot Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springbootdeployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot
  template:
    metadata:
      name: springapppod
      labels:
        app: springboot
    spec:
      containers:
      - name: springboot
        image: mylandmarktech/spring-boot-mongo
        ports:
        - containerPort: 8080  
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongo
        - name: MONGO_INITDB_ROOT_USERNAME
          value: springapp
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: mongodb@123
---
# Node Port Service For SpringApp
apiVersion: v1
kind: Service
metadata:
  name: springboot
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: springboot
---
# MongoDB Replication Controller with host path Volume
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-controller
spec:
  replicas: 1
  selector:
    app: mongo
  serviceName: <ServiceName>
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: springapp 
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: mongodb@123 
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

---

# MongoDB Node Port Service
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongo
